// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.906
package views

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

func HelpModal() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<div x-data=\"{modalIsOpen: false}\"><button x-on:click=\"modalIsOpen = true\" type=\"button\" class=\"whitespace-nowrap rounded bg-gray-400 border border-black dark:border-white px-4 py-2 text-center text-m font-medium tracking-wide text-black transition hover:opacity-75 focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-black active:opacity-100 active:outline-offset-0 \">Help</button><div x-cloak x-show=\"modalIsOpen\" x-transition.opacity.duration.200ms x-trap.inert.noscroll=\"modalIsOpen\" x-on:keydown.esc.window=\"modalIsOpen = false\" x-on:click.self=\"modalIsOpen = false\" class=\"fixed inset-0 z-30 flex items-end justify-center bg-gray-900/20 p-4 pb-4 backdrop-blur-md sm:items-center lg:p-8\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"defaultModalTitle\"><!-- Modal Dialog --><div x-show=\"modalIsOpen\" x-transition:enter=\"transition ease-out duration-200 delay-100 motion-reduce:transition-opacity\" x-transition:enter-start=\"opacity-0\" x-transition:enter-end=\"opacity-100\" class=\"flex max-w-2xl min-w-2xl flex-col gap-4 overflow-hidden rounded-sm border border-neutral-300 bg-gray-300 text-neutral-600 dark:border-neutral-700 dark:bg-gray-600 dark:text-neutral-300\"><!-- Dialog Header --><div class=\"flex items-center justify-between border-b border-neutral-300 bg-neutral-50/60 p-4 dark:border-neutral-700 dark:bg-neutral-950/20\"><h2 id=\"defaultModalTitle\" class=\"font-semibold tracking-wide text-neutral-900 dark:text-white\">Help</h2></div><!-- Dialog Body --><div class=\"px-4 py-8\"><p><h4><span class=\"underline text-lg\">Text Fields</span> <span class=\"text-xs\">Name, Effect, Type, Race</span></h4><p><p class=\"text-sm\"><i class=\"fa-solid fa-circle-chevron-right fa-sm\"></i> All accept multiple values separated by commas and with no spaces after commas.<br><i class=\"fa-solid fa-circle-chevron-right fa-sm\"></i> Start a search term with \" ! \" anything that follows will show results that do not include that term.<br><i class=\"fa-solid fa-circle-chevron-right fa-sm\"></i> Searches are <span class=\"underline font-bold\">case-insensitive</span> and work with <span class=\"underline font-bold\">partial matching</span><br><br><span class=\"italic text-xs\">*cannot end statement with a comma:<br><i class=\"fa-solid fa-xmark\"></i>\"dark magician,!girl,\"<br><i class=\"fa-solid fa-check\"></i>\"dark magician,!girl\"</span></p><br><div x-data=\"{ expanded: false }\"><button type=\"button\" @click=\"expanded = ! expanded\" class=\"bg-gray-600 dark:bg-gray-400 text-black dark:text-white  border border-transparent rounded p-2 text-sm\">Show Examples</button><div x-cloak x-show=\"expanded\" x-collapse class=\"max-w-2xl\"><p class=\"text-sm\"><br>Ex (Name): \"!dark, magician\"<br><br>This will show all cards without dark but have magician you can further filter results by applying the same logic to other fields</p><br><p class=\"text-sm\">Ex (Type): \"!Fusion, !Trap, Effect, Quick-Play\"<br><br>This will filter out all traps and fusion monsters, but show the rest of effect monsters, if you only want to omit a particular type of trap you would replace \"Trap\" with say Counter or Continuous.<br>Spaces are allowed withing singular queries like Counter Trap, this will match against that entire term.<br><br><span class=\"italic text-xs\">Choosing \"continuous\" will also omit continuous spells as well, so \"continuous trap\" may be more ideal.</span></p></div></div><br></p><p><h4><span class=\"underline\">Number Fields</span>: <span class=\"text-xs\">Link Rating, Scale, Atk, Def Level/Rank</span></h4><p class=\"text-sm\"><i class=\"fa-solid fa-circle-chevron-right fa-sm\"></i> By default they will show results that are equal to the number entered.<br><i class=\"fa-solid fa-circle-chevron-right fa-sm\"></i> You can include <span>\"&lt or &gt\"</span> signs to show a range of values.<br><br><div x-data=\"{ expanded: false }\"><button type=\"button\" @click=\"expanded = ! expanded\" class=\"bg-gray-600 dark:bg-gray-400 text-black dark:text-white  border border-transparent rounded p-2 text-sm\">Show Examples</button><div x-cloak x-show=\"expanded\" x-collapse class=\"max-w-2xl\"><p class=\"text-sm\"><br>Ex (Scale): \">5\"<br>This will show all scales above but not including 5. Unlike the text fields you cannot enter multiple values.<br><br>The same goes for the other fields like this.</p></div></div></p></p></p></div></div></div></div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
